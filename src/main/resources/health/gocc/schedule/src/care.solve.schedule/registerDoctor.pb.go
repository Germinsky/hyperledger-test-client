// Code generated by protoc-gen-go. DO NOT EDIT.
// source: registerDoctor.proto

/*
Package main is a generated protocol buffer package.

It is generated from these files:
	registerDoctor.proto

It has these top-level messages:
	Patient
	Doctor
	Schedule
	Slot
	ScheduleRecord
*/
package main

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Patient struct {
	UserId    string  `protobuf:"bytes,1,opt,name=UserId" json:"UserId,omitempty"`
	Email     string  `protobuf:"bytes,2,opt,name=Email" json:"Email,omitempty"`
	FirstName string  `protobuf:"bytes,3,opt,name=FirstName" json:"FirstName,omitempty"`
	LastName  string  `protobuf:"bytes,4,opt,name=LastName" json:"LastName,omitempty"`
	Balance   float32 `protobuf:"fixed32,5,opt,name=Balance" json:"Balance,omitempty"`
}

func (m *Patient) Reset()                    { *m = Patient{} }
func (m *Patient) String() string            { return proto.CompactTextString(m) }
func (*Patient) ProtoMessage()               {}
func (*Patient) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Patient) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Patient) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Patient) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *Patient) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *Patient) GetBalance() float32 {
	if m != nil {
		return m.Balance
	}
	return 0
}

type Doctor struct {
	UserId    string `protobuf:"bytes,1,opt,name=UserId" json:"UserId,omitempty"`
	Email     string `protobuf:"bytes,2,opt,name=Email" json:"Email,omitempty"`
	FirstName string `protobuf:"bytes,3,opt,name=FirstName" json:"FirstName,omitempty"`
	LastName  string `protobuf:"bytes,4,opt,name=LastName" json:"LastName,omitempty"`
	Level     string `protobuf:"bytes,5,opt,name=Level" json:"Level,omitempty"`
}

func (m *Doctor) Reset()                    { *m = Doctor{} }
func (m *Doctor) String() string            { return proto.CompactTextString(m) }
func (*Doctor) ProtoMessage()               {}
func (*Doctor) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Doctor) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Doctor) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Doctor) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *Doctor) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *Doctor) GetLevel() string {
	if m != nil {
		return m.Level
	}
	return ""
}

type Schedule struct {
	ScheduleId string                     `protobuf:"bytes,1,opt,name=ScheduleId" json:"ScheduleId,omitempty"`
	DoctorId   string                     `protobuf:"bytes,2,opt,name=DoctorId" json:"DoctorId,omitempty"`
	Records    map[string]*ScheduleRecord `protobuf:"bytes,3,rep,name=Records" json:"Records,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Schedule) Reset()                    { *m = Schedule{} }
func (m *Schedule) String() string            { return proto.CompactTextString(m) }
func (*Schedule) ProtoMessage()               {}
func (*Schedule) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Schedule) GetScheduleId() string {
	if m != nil {
		return m.ScheduleId
	}
	return ""
}

func (m *Schedule) GetDoctorId() string {
	if m != nil {
		return m.DoctorId
	}
	return ""
}

func (m *Schedule) GetRecords() map[string]*ScheduleRecord {
	if m != nil {
		return m.Records
	}
	return nil
}

type Slot struct {
	TimeStart  uint64 `protobuf:"varint,1,opt,name=TimeStart" json:"TimeStart,omitempty"`
	TimeFinish uint64 `protobuf:"varint,2,opt,name=TimeFinish" json:"TimeFinish,omitempty"`
}

func (m *Slot) Reset()                    { *m = Slot{} }
func (m *Slot) String() string            { return proto.CompactTextString(m) }
func (*Slot) ProtoMessage()               {}
func (*Slot) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Slot) GetTimeStart() uint64 {
	if m != nil {
		return m.TimeStart
	}
	return 0
}

func (m *Slot) GetTimeFinish() uint64 {
	if m != nil {
		return m.TimeFinish
	}
	return 0
}

type ScheduleRecord struct {
	RecordId    string `protobuf:"bytes,1,opt,name=RecordId" json:"RecordId,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=Description" json:"Description,omitempty"`
	PatientId   string `protobuf:"bytes,3,opt,name=PatientId" json:"PatientId,omitempty"`
	Slot        *Slot  `protobuf:"bytes,4,opt,name=Slot" json:"Slot,omitempty"`
}

func (m *ScheduleRecord) Reset()                    { *m = ScheduleRecord{} }
func (m *ScheduleRecord) String() string            { return proto.CompactTextString(m) }
func (*ScheduleRecord) ProtoMessage()               {}
func (*ScheduleRecord) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ScheduleRecord) GetRecordId() string {
	if m != nil {
		return m.RecordId
	}
	return ""
}

func (m *ScheduleRecord) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ScheduleRecord) GetPatientId() string {
	if m != nil {
		return m.PatientId
	}
	return ""
}

func (m *ScheduleRecord) GetSlot() *Slot {
	if m != nil {
		return m.Slot
	}
	return nil
}

func init() {
	proto.RegisterType((*Patient)(nil), "main.Patient")
	proto.RegisterType((*Doctor)(nil), "main.Doctor")
	proto.RegisterType((*Schedule)(nil), "main.Schedule")
	proto.RegisterType((*Slot)(nil), "main.Slot")
	proto.RegisterType((*ScheduleRecord)(nil), "main.ScheduleRecord")
}

func init() { proto.RegisterFile("registerDoctor.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 404 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x52, 0xcd, 0x6a, 0x1b, 0x31,
	0x10, 0x46, 0xf6, 0xda, 0x8e, 0xc7, 0xa5, 0x14, 0x61, 0xca, 0x36, 0x2d, 0x61, 0xd9, 0x93, 0xe9,
	0x61, 0xa1, 0x2e, 0x85, 0xd2, 0xa3, 0x71, 0x02, 0x86, 0x50, 0x8c, 0xdc, 0x5e, 0x7a, 0x53, 0x76,
	0x87, 0x46, 0x44, 0x2b, 0x05, 0x49, 0x31, 0xf8, 0x05, 0x7a, 0x69, 0xdf, 0xad, 0xaf, 0x54, 0xf4,
	0xb3, 0x9b, 0xf5, 0x0b, 0xf4, 0x36, 0xdf, 0xf7, 0x49, 0x33, 0xdf, 0xfc, 0xc0, 0xd2, 0xe0, 0x4f,
	0x61, 0x1d, 0x9a, 0xad, 0xae, 0x9d, 0x36, 0xd5, 0xa3, 0xd1, 0x4e, 0xd3, 0xac, 0xe5, 0x42, 0x95,
	0xbf, 0x09, 0xcc, 0xf6, 0xdc, 0x09, 0x54, 0x8e, 0xbe, 0x86, 0xe9, 0x77, 0x8b, 0x66, 0xd7, 0xe4,
	0xa4, 0x20, 0xab, 0x39, 0x4b, 0x88, 0x2e, 0x61, 0x72, 0xdd, 0x72, 0x21, 0xf3, 0x51, 0xa0, 0x23,
	0xa0, 0xef, 0x60, 0x7e, 0x23, 0x8c, 0x75, 0x5f, 0x79, 0x8b, 0xf9, 0x38, 0x28, 0xcf, 0x04, 0xbd,
	0x84, 0x8b, 0x5b, 0x9e, 0xc4, 0x2c, 0x88, 0x3d, 0xa6, 0x39, 0xcc, 0x36, 0x5c, 0x72, 0x55, 0x63,
	0x3e, 0x29, 0xc8, 0x6a, 0xc4, 0x3a, 0x58, 0xfe, 0x22, 0x30, 0x8d, 0x26, 0xff, 0x9b, 0x99, 0x25,
	0x4c, 0x6e, 0xf1, 0x88, 0x32, 0x58, 0x99, 0xb3, 0x08, 0xca, 0xbf, 0x04, 0x2e, 0x0e, 0xf5, 0x3d,
	0x36, 0x4f, 0x12, 0xe9, 0x15, 0x40, 0x17, 0xf7, 0x76, 0x06, 0x8c, 0x4f, 0x1f, 0x4d, 0xef, 0x9a,
	0xe4, 0xaa, 0xc7, 0xf4, 0x13, 0xcc, 0x18, 0xd6, 0xda, 0x34, 0x36, 0x1f, 0x17, 0xe3, 0xd5, 0x62,
	0xfd, 0xb6, 0xf2, 0x73, 0xaf, 0xba, 0xef, 0x55, 0x52, 0xaf, 0x95, 0x33, 0x27, 0xd6, 0xbd, 0xbd,
	0xdc, 0xc3, 0x8b, 0xa1, 0x40, 0x5f, 0xc1, 0xf8, 0x01, 0x4f, 0xa9, 0xb6, 0x0f, 0xe9, 0x7b, 0x98,
	0x1c, 0xb9, 0x7c, 0xc2, 0x50, 0x71, 0xb1, 0x5e, 0x9e, 0xa7, 0x8d, 0x9f, 0x59, 0x7c, 0xf2, 0x65,
	0xf4, 0x99, 0x94, 0x5b, 0xc8, 0x0e, 0x52, 0x3b, 0x3f, 0xa9, 0x6f, 0xa2, 0xc5, 0x83, 0xe3, 0xc6,
	0x85, 0x7c, 0x19, 0x7b, 0x26, 0x7c, 0xab, 0x1e, 0xdc, 0x08, 0x25, 0xec, 0x7d, 0x48, 0x9d, 0xb1,
	0x01, 0x53, 0xfe, 0x21, 0xf0, 0xf2, 0xbc, 0x86, 0xef, 0x3e, 0x46, 0xfd, 0x6c, 0x7a, 0x4c, 0x0b,
	0x58, 0x6c, 0xd1, 0xd6, 0x46, 0x3c, 0x3a, 0xa1, 0x55, 0x1a, 0xce, 0x90, 0xf2, 0x76, 0xd2, 0xf9,
	0xed, 0x9a, 0x6e, 0x71, 0x3d, 0x41, 0xaf, 0xa2, 0xe9, 0xb0, 0xb4, 0xc5, 0x1a, 0x52, 0x8f, 0x52,
	0x3b, 0x16, 0xf8, 0xcd, 0x07, 0x78, 0x53, 0x73, 0x83, 0x95, 0xd5, 0xf2, 0x88, 0xd5, 0x1d, 0xaf,
	0x1f, 0x50, 0x35, 0x15, 0x2a, 0x27, 0xdc, 0x69, 0xd3, 0x1b, 0xdd, 0xfb, 0x7b, 0xb7, 0x3f, 0xc2,
	0xc1, 0xdf, 0x4d, 0xc3, 0xf5, 0x7f, 0xfc, 0x17, 0x00, 0x00, 0xff, 0xff, 0x00, 0xc5, 0x5f, 0xa1,
	0x15, 0x03, 0x00, 0x00,
}
